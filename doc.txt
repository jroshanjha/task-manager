# === ✅ Fullstack Task Manager (React + FastAPI + MySQL) ===

# === 📁 Project Structure ===
# fullstack-task-manager/
# ├── backend/
# │   ├── main.py
# │   ├── database.py
# │   ├── models.py
# │   ├── jwt_handler.py
# │   ├── users.py
# │   ├── tasks.py
# │   └── requirements.txt
# ├── frontend/
# │   ├── src/
# │   │   ├── App.js
# │   │   ├── index.js
# │   │   ├── auth/AuthContext.js
# │   │   └── pages/ (Login.js, Register.js, Tasks.js, AdminDashboard.js)
# │   ├── .env
# │   └── package.json
# ├── .env
# └── package.json  # root level for concurrently

npm install concurrently

# ✅ Now run:
# npm run start
# React app: http://localhost:3000
# FastAPI backend: http://localhost:8000


🔧 Backend – FastAPI (/backend)

mkdir backend
cd backend
python -m venv venv
source venv/bin/activate  # or venv\Scripts\activate on Windows
pip install fastapi uvicorn sqlalchemy pydantic[dotenv] aiofiles

🚀 Run Backend
uvicorn main:app --reload

🧑‍🎨 Frontend – React (/frontend)
npx create-react-app frontend
cd frontend
npm install axios

Run frontend:
cd frontend
npm start


Dockerized version?

Connected to SQLite or MySQL?

JWT Login and Auth?

Deployed on Render or Vercel?

#  Windows CMD:
rmdir /s /q node_modules
del package-lock.json

# 1. Remove old modules and lock file
Remove-Item -Recurse -Force node_modules
Remove-Item -Force package-lock.json

# 2. Reinstall dependencies
npm install

# 3. Start the React app
npm start

# You can manually install react-scripts:
npm install react-scripts --save

# 📌 After this, check that react-scripts is present:
Get-ChildItem -Recurse -Filter "react-scripts"

🛠 Option A: Run this command to install correct version
npm install react-scripts@5.0.1 --save

npm install
npm start

🔧 Step-by-Step Setup:
1. Go to your frontend folder and install concurrently:
npm install concurrently

#  🔧 Create Root package.json
npm init -y
npm install concurrently


React app runs at: http://localhost:3000
Flask backend runs at: http://localhost:5000



"scripts": {
    "start": "concurrently \"npm run start-react\" \"npm run start-backend\"",
    "start-react": "react-scripts start",
    "start-backend": "cd ../backend && python app.py",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  
✅ Run Instructions

cd fullstack-task-manager
npm install                # installs concurrently
cd frontend && npm install
cd .. && npm run start     # runs backend + frontend together



# ✅ Run this in main.py to create tables
# Base.metadata.create_all(bind=engine)

# === MySQL Setup Instructions ===

# 1. Install MySQL locally or use cloud (PlanetScale, Render, etc.)

# 2. Create Database:
#    CREATE DATABASE taskdb;

# 3. Install MySQL driver:
#    pip install pymysql

# 4. Set environment variable (for local dev):
#    export DATABASE_URL="mysql+pymysql://root:yourpassword@localhost:3306/taskdb"

# 5. Optional .env support (update main.py):
#    from dotenv import load_dotenv; load_dotenv()

# 6. Ready to deploy with Render:
#    - Add DATABASE_URL as environment variable
#    - Use connection string from Render or PlanetScale

# ✅ You can now run `uvicorn main:app --reload` and FastAPI will work with MySQL

✅ Verify MySQL User Permissions (Optional):
SELECT user, host FROM mysql.user;
